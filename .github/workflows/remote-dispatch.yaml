name: Trigger auto-onbord workflow

on:
  push:
    branches:
      - 'onboarding-*'

jobs:
  notify:
    runs-on: ubuntu-latest
    #if: startsWith(github.head_ref, 'onboarding-')
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Extract email from PR title
        id: extract_email_and_username
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          EMAIL="${TITLE#Onboarding }"
          USERNAME="${EMAIL%@*}"

          echo "email=$EMAIL" >> $GITHUB_OUTPUT
          echo "username=$USERNAME" >> $GITHUB_OUTPUT

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Process user config file
        run: |
          for file in ${{ steps.changes.outputs.added_files }}; do
            if [[ "$file" == configs/users/*.yaml ]]; then
              echo "Processing $file"
              alias=$(yq eval '.username' "$file")
              echo "alias=$ALIAS" >> $GITHUB_OUTPUT
            fi
          done

      - name: Parse first user file
        if: success()
        id: extract_alias
        run: |
          FILE=$(head -n 1 changed_files.txt)
          echo "Parsing $FILE"
          ALIAS=$(yq eval '.username:[0]' "$FILE")
          echo "alias=$ALIAS" >> $GITHUB_OUTPUT

      - name: Call workflow in auto-onboard
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'treezio',
              repo: 'auto-onboard',
              workflow_id: 'auto-onboard.yaml',
              ref: 'main',
              inputs: {
                alias: ${{ steps.extract_alias.outputs.alias }}
                email: ${{ steps.extract_email_and_username.outputs.email }}
                username: ${{ steps.extract_email_and_username.outputs.username }}
              }
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}